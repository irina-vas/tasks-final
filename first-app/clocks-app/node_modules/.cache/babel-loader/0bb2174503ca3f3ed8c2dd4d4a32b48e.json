{"ast":null,"code":"var _jsxFileName = \"/home/tws/WebstormProjects/tasks-final/first-app/clocks-app/src/components/ClassComponent.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ClassComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date().toLocaleTimeString(),\n      timerOn: true\n    };\n  }\n\n  componentDidMount() {\n    let counterId;\n\n    if (this.state.timerOn) {\n      this.timerID = setInterval(() => this.time(), 1000);\n    }\n\n    return () => {\n      clearInterval(counterId);\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.counterId);\n  }\n\n  time() {\n    this.setState({\n      date: new Date().toLocaleTimeString()\n    });\n  }\n\n  start() {\n    this.setState(state => ({\n      timerOn: state.timerOn,\n      date: new Date().toLocaleTimeString()\n    }));\n  }\n\n  stop() {\n    this.setState(state => ({\n      timerOn: !state.timerOn\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Clocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.start,\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stop,\n        children: \"STOP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default ClassComponent;","map":{"version":3,"sources":["/home/tws/WebstormProjects/tasks-final/first-app/clocks-app/src/components/ClassComponent.js"],"names":["React","Component","ClassComponent","constructor","props","state","date","Date","toLocaleTimeString","timerOn","componentDidMount","counterId","timerID","setInterval","time","clearInterval","componentWillUnmount","setState","start","stop","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,OAAO,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAC1CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,kBAAX,EADG;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,SAAJ;;AACA,QAAI,KAAKN,KAAL,CAAWI,OAAf,EAAwB;AACpB,WAAKG,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B;AACH;;AACD,WAAO,MAAM;AACTC,MAAAA,aAAa,CAACJ,SAAD,CAAb;AACH,KAFD;AAIH;;AAEDK,EAAAA,oBAAoB,GAAG;AACnBD,IAAAA,aAAa,CAAC,KAAKJ,SAAN,CAAb;AACH;;AAEDG,EAAAA,IAAI,GAAG;AACH,SAAKG,QAAL,CAAc;AACVX,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,kBAAX;AADI,KAAd;AAGH;;AAEDU,EAAAA,KAAK,GAAG;AACJ,SAAKD,QAAL,CAAcZ,KAAK,KAAK;AACpBI,MAAAA,OAAO,EAAEJ,KAAK,CAACI,OADK;AAEpBH,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,kBAAX;AAFc,KAAL,CAAnB;AAIH;;AAEDW,EAAAA,IAAI,GAAG;AACH,SAAKF,QAAL,CAAcZ,KAAK,KAAK;AACpBI,MAAAA,OAAO,EAAE,CAACJ,KAAK,CAACI;AADI,KAAL,CAAnB;AAGH;;AAEDW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAK,KAAKf,KAAL,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKY,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAE,KAAKC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AApDyC;AAuD9C,eAAejB,cAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nexport class ClassComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date().toLocaleTimeString(),\n            timerOn: true\n        };\n    }\n\n    componentDidMount() {\n        let counterId;\n        if (this.state.timerOn) {\n            this.timerID = setInterval(() => this.time(), 1000);\n        }\n        return () => {\n            clearInterval(counterId)\n        }\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.counterId);\n    }\n\n    time() {\n        this.setState({\n            date: new Date().toLocaleTimeString()\n        });\n    }\n\n    start() {\n        this.setState(state => ({\n            timerOn: state.timerOn,\n            date: new Date().toLocaleTimeString()\n        }))\n    }\n\n    stop() {\n        this.setState(state => ({\n            timerOn: !state.timerOn\n        }))\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Clocks</h1>\n                <h2>{this.state.date}</h2>\n                <button onClick={this.start}>START</button>\n                <button onClick={this.stop}>STOP</button>\n            </div>\n        );\n    }\n}\n\nexport default ClassComponent;"]},"metadata":{},"sourceType":"module"}