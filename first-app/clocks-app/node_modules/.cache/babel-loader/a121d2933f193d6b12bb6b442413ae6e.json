{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n//\n// function FunctionalComponent(props) {\n//     let date = new Date().toLocaleTimeString();\n//     const [time, setTime] = useState(date);\n//     const [timerOn, setTimerOn] = useState(true)\n//\n//\n//     useEffect(() => {\n//         let counterId;\n//         if (timerOn) {\n//             counterId = setInterval(() => {\n//                 date = new Date().toLocaleTimeString();\n//                 setTime(date);\n//             }, 1000)\n//         }\n//         return () => {\n//             clearInterval(counterId);\n//         }\n//\n//     }, [timerOn])\n//\n//     const start = () => {\n//         setTimerOn(true);\n//         setTime(date);\n//     }\n//\n//     const stop = () => {\n//         setTimerOn(false);\n//     }\n//\n//     return (\n//         <div className=\"clocks\">\n//\n//             <h1>Clocks</h1>\n//             <h2>{time}</h2>\n//             <button onClick={start}>START</button>\n//             <button onClick={stop}>STOP</button>\n//         </div>\n//     );\n// }\n//\n// export default FunctionalComponent;\n// constructor(props) {\n//     super(props);\n//     this.state = { date: new Date(), status: true };\n//     this.handleStop = this.handleStop.bind(this);\n//     this.handleStart = this.handleStart.bind(this);\n// }\n//\n// componentDidMount() {\n//     if (this.state.status) {\n//         this.clear = setInterval(() => {\n//             this.setState({ date: new Date() });\n//         }, 1000);\n//     }\n// }\n//\n// handleStop() {\n//     clearInterval(this.clear);\n//     this.setState({ status: !this.state.status });\n// }\n//\n// handleStart() {\n//     this.clear = setInterval(() => {\n//         this.setState({ date: new Date() });\n//     }, 1000);\n//     this.setState({ status: !this.state.status });\n// }","map":{"version":3,"sources":["/home/tws/WebstormProjects/tasks-final/first-app/clocks-app/src/components/FunctionalComponent.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useState, useEffect } from 'react';\n//\n// function FunctionalComponent(props) {\n//     let date = new Date().toLocaleTimeString();\n//     const [time, setTime] = useState(date);\n//     const [timerOn, setTimerOn] = useState(true)\n//\n//\n//     useEffect(() => {\n//         let counterId;\n//         if (timerOn) {\n//             counterId = setInterval(() => {\n//                 date = new Date().toLocaleTimeString();\n//                 setTime(date);\n//             }, 1000)\n//         }\n//         return () => {\n//             clearInterval(counterId);\n//         }\n//\n//     }, [timerOn])\n//\n//     const start = () => {\n//         setTimerOn(true);\n//         setTime(date);\n//     }\n//\n//     const stop = () => {\n//         setTimerOn(false);\n//     }\n//\n//     return (\n//         <div className=\"clocks\">\n//\n//             <h1>Clocks</h1>\n//             <h2>{time}</h2>\n//             <button onClick={start}>START</button>\n//             <button onClick={stop}>STOP</button>\n//         </div>\n//     );\n// }\n//\n// export default FunctionalComponent;\n\n// constructor(props) {\n//     super(props);\n//     this.state = { date: new Date(), status: true };\n//     this.handleStop = this.handleStop.bind(this);\n//     this.handleStart = this.handleStart.bind(this);\n// }\n//\n// componentDidMount() {\n//     if (this.state.status) {\n//         this.clear = setInterval(() => {\n//             this.setState({ date: new Date() });\n//         }, 1000);\n//     }\n// }\n//\n// handleStop() {\n//     clearInterval(this.clear);\n//     this.setState({ status: !this.state.status });\n// }\n//\n// handleStart() {\n//     this.clear = setInterval(() => {\n//         this.setState({ date: new Date() });\n//     }, 1000);\n//     this.setState({ status: !this.state.status });\n// }"]},"metadata":{},"sourceType":"module"}