{"ast":null,"code":"var _jsxFileName = \"/home/tws/WebstormProjects/tasks-final/first-app/clocks-app/src/components/FunctionalComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FunctionalComponent(props) {\n  _s();\n\n  let date = new Date().toLocaleTimeString();\n  const [time, setTime] = useState(date);\n  const [timerOn, setTimerOn] = useState(true);\n  React.useEffect(() => {\n    let secondCounterId;\n    let counterId;\n\n    if (status === \"working\") {\n      secondCounterId = setTimeout(() => setCounterSecond(counterSecond + 1), 1000);\n      counterId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n\n    return () => {\n      clearTimeout(counterId);\n      clearTimeout(secondCounterId);\n    };\n  }, [counterSecond, counter, status]);\n\n  const handletimer = () => {\n    setTime(counterSecond);\n  };\n\n  const stopTimers = () => {\n    setStatus(\"paused\");\n  };\n\n  const resume = () => {\n    setStatus(\"working\");\n  }; //let timer;\n\n\n  useEffect(() => {\n    let counterId;\n\n    if (timerOn) {\n      counterId = setInterval(() => {\n        date = new Date().toLocaleTimeString();\n        setTime(date);\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(counterId);\n    };\n  }, [timerOn]);\n\n  const start = () => {\n    setTime();\n  };\n\n  const stop = () => {\n    // clearInterval(setTimerOn);\n    setTimerOn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clocks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Clocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      children: \"START\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stop,\n      children: \"STOP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FunctionalComponent, \"A8hh8U/zGOO89xaljO7XU2x0b/w=\");\n\n_c = FunctionalComponent;\nexport default FunctionalComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FunctionalComponent\");","map":{"version":3,"sources":["/home/tws/WebstormProjects/tasks-final/first-app/clocks-app/src/components/FunctionalComponent.js"],"names":["React","useState","useEffect","FunctionalComponent","props","date","Date","toLocaleTimeString","time","setTime","timerOn","setTimerOn","secondCounterId","counterId","status","setTimeout","setCounterSecond","counterSecond","setCounter","counter","clearTimeout","handletimer","stopTimers","setStatus","resume","setInterval","clearInterval","start","stop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAChC,MAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAX;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACI,IAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAGAD,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AAClB,QAAIU,eAAJ;AACA,QAAIC,SAAJ;;AACA,QAAIC,MAAM,KAAK,SAAf,EAA0B;AACtBF,MAAAA,eAAe,GAAGG,UAAU,CACxB,MAAMC,gBAAgB,CAACC,aAAa,GAAG,CAAjB,CADE,EAExB,IAFwB,CAA5B;AAIAJ,MAAAA,SAAS,GAAGE,UAAU,CAAC,MAAMG,UAAU,CAACC,OAAO,GAAG,CAAX,CAAjB,EAAgC,IAAhC,CAAtB;AACH;;AAED,WAAO,MAAM;AACTC,MAAAA,YAAY,CAACP,SAAD,CAAZ;AACAO,MAAAA,YAAY,CAACR,eAAD,CAAZ;AACH,KAHD;AAIH,GAfD,EAeG,CAACK,aAAD,EAAgBE,OAAhB,EAAyBL,MAAzB,CAfH;;AAiBA,QAAMO,WAAW,GAAG,MAAM;AACtBZ,IAAAA,OAAO,CAACQ,aAAD,CAAP;AACH,GAFD;;AAGA,QAAMK,UAAU,GAAG,MAAM;AACrBC,IAAAA,SAAS,CAAC,QAAD,CAAT;AACH,GAFD;;AAGA,QAAMC,MAAM,GAAG,MAAM;AACjBD,IAAAA,SAAS,CAAC,SAAD,CAAT;AACH,GAFD,CA7BgC,CAmChC;;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,SAAJ;;AACA,QAAIH,OAAJ,EAAa;AACTG,MAAAA,SAAS,GAAGY,WAAW,CAAC,MAAM;AAC1BpB,QAAAA,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAP;AACAE,QAAAA,OAAO,CAACJ,IAAD,CAAP;AACH,OAHsB,EAGpB,IAHoB,CAAvB;AAIH;;AACD,WAAO,MAAM;AACTqB,MAAAA,aAAa,CAACb,SAAD,CAAb;AACH,KAFD;AAIH,GAZQ,EAYN,CAACH,OAAD,CAZM,CAAT;;AAcA,QAAMiB,KAAK,GAAG,MAAM;AAChBlB,IAAAA,OAAO;AACV,GAFD;;AAKA,QAAMmB,IAAI,GAAG,MAAM;AACf;AACAjB,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEmB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAtEQzB,mB;;KAAAA,mB;AAwET,eAAeA,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction FunctionalComponent(props) {\n    let date = new Date().toLocaleTimeString();\n    const [time, setTime] = useState(date);\n    const [timerOn, setTimerOn] = useState(true)\n\n\n    React.useEffect(() => {\n        let secondCounterId;\n        let counterId;\n        if (status === \"working\") {\n            secondCounterId = setTimeout(\n                () => setCounterSecond(counterSecond + 1),\n                1000\n            );\n            counterId = setTimeout(() => setCounter(counter - 1), 1000);\n        }\n\n        return () => {\n            clearTimeout(counterId);\n            clearTimeout(secondCounterId);\n        };\n    }, [counterSecond, counter, status]);\n\n    const handletimer = () => {\n        setTime(counterSecond);\n    };\n    const stopTimers = () => {\n        setStatus(\"paused\");\n    };\n    const resume = () => {\n        setStatus(\"working\");\n    };\n\n\n\n    //let timer;\n    useEffect(() => {\n        let counterId;\n        if (timerOn) {\n            counterId = setInterval(() => {\n                date = new Date().toLocaleTimeString();\n                setTime(date);\n            }, 1000)\n        }\n        return () => {\n            clearInterval(counterId);\n        }\n\n    }, [timerOn])\n\n    const start = () => {\n        setTime()\n    }\n\n\n    const stop = () => {\n        // clearInterval(setTimerOn);\n        setTimerOn(false);\n\n    }\n\n    return (\n        <div className=\"clocks\">\n\n            <h1>Clocks</h1>\n            <h2>{time}</h2>\n            <button onClick={start}>START</button>\n            <button onClick={stop}>STOP</button>\n        </div>\n    );\n}\n\nexport default FunctionalComponent;"]},"metadata":{},"sourceType":"module"}